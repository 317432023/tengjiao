server:
  port: 8080

  tomcat:
    min-spare-threads: 30      # 线程池的最小备用线程数，tomcat启动时的初始化的线程数
    max-threads: 1000          # 线程池的最大线程数
    max-connections: 5000      # 最大连接数
    accept-count: 2000         # 排队数
    connection-timeout: 5000ms # 最长等待时间
spring:
  main:
    lazy-initialization: false # 延时加载 springboot 2.2+ 特性
    banner-mode: off
  application:
    name: tengjiao-seed-templet-admin
  profiles:
    active: prod # 环境 dev|test|uat|prod # 配置了active 会同时去加载 application-${active}.yml 文件
  output:
    ansi:
      enabled: always

  transaction:
    rollback-on-commit-failure: true # 开启事务失败回滚

  mvc:
    throw-exception-if-no-handler-found: true #出现错误时, 直接抛出异常
    view:
      suffix: .html
    # 静态资源访问路径
    static-path-pattern: /**

  resources:
    # ！！！如果工程仅仅作为服务接口可以关闭映射
    add-mappings: false # 不要为我们工程中的资源文件建立映射

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai #time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: false
    #generator:
    #  write_numbers_as_strings: true # 将数值类型转换为字符串，解决long型精度丢失

  # 缓存策略
  cache: # 依赖spring-boot-starter-cache；由 @EnableCaching 开启，支持@CachePut | @CacheEvict | @Cacheable
    type: redis
    redis:
      time-to-live: 3600s

  # 会话存储策略
  session: # 依赖spring-session-core；由 @EnableRedisHttpSession 开启
    store-type: redis # redis 或 jdbc
    timeout: 3600s
    redis: # 依赖spring-session-data-redis 与 spring-boot-starter-data-redis
      cleanup-cron: 0 */30 * * * ? # 半小时清理session,cron表达式可以自行百度

  redis: # 依赖 spring-boot-starter-data-redis
    host: localhost
    port: 6379
    #password: 15bc104021ea44258202381e32be4cca
    database: 0 # Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0

    timeout: 10000 #连接超时时间（毫秒）

    jedis: # Jedis
      pool:
        max-active: 8 # 最大连接数（使用负值表示没有限制） 默认 8
        max-wait: -1 # 最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-idle: 8 # 最大空闲连接 默认 8
        min-idle: 0 # 最小空闲连接 默认 0

  h2:
    console:
      enabled: true # 是否启用控制台
      path: /h2-console # 控制台可用路径

  # 数据源
  datasource:
    url: jdbc:mysql://${spring.redis.host}:3306/tengjiao-seed-admin?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver # `com.mysql.cj.jdbc.Drive` for mysql5.7+

    # 1、hikari
    type: com.zaxxer.hikari.HikariDataSource # spring2.0以上默认就是hikari，这行配置可以省略
    hikari:
      #连接池名称，默认HikariPool-1
      pool-name: KevinHikariPool
      auto-commit: true
      #最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为minimum-idle的值
      maximum-pool-size: 16
      #连接超时时间:毫秒，小于250毫秒，否则被重置为默认值30秒
      connection-timeout: 60000
      #最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
      minimum-idle: 4
      #空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒。
      # 只有空闲连接数大于最大连接数且空闲时间(毫秒)超过该值，才会被释放
      idle-timeout: 500000
      #连接最大存活时间.不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
      max-lifetime: 1200000
      connection-test-query: SELECT 1

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 将数据库的带下划线“”给去掉然后映射到实体类的属性上去
    # (开发测试)开启或关闭(生产)控制台sql打印；如果已经使用p6spy就没必要配置它打印SQL了(关闭它)，因为p6spy更好用
    # 关闭方法：log-impl设置为空或删除配置即可；
    # 开启方法：log-impl值设置为org.apache.ibatis.logging.stdout.StdOutImpl
    log-impl: #org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    banner: false
    db-config:
      logic-delete-field: deleted # 全局逻辑删除的实体字段名（自3.3.0，配置后可以忽略不配置实体类字段标注@TableLogic private Integer deleted;）
      logic-delete-value: 1 # 逻辑已删除值（默认 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
  # xml扫描，一般这样配置如classpath*:**/mapper/**/*Mapper.xml 多个目录可以用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  # 若和mapper接口放在同一包下，这不需要特殊指定
  #mapper-locations: classpath*:**/mapper/*Mapper.xml
  #type-aliases-package: com.tengjiao.seed.admin.entity

####################################
# 分页插件配置
####################################
pagehelper:
  helperDialect: mysql
  # 设置为ture时，当pageNum<=0时会查询第一页；pageNum>=pages会查询最后一页
  reasonable: true
  params: count=countSql
  # 支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
  support-methods-arguments: true

logging:
  config: ./config/log4j2-spring.xml

# 是否开启 mybatis-plus 拦截器中的插件
tengjiao:
  mybatisplus-pagination: true # 分页插件
  mybatisplus-optimistic: true # 乐观锁插件

# 以下为自定义属性
config:
  setting: ./config/setting.properties